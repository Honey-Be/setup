#!/bin/sh

### constants
osver=`cat /etc/frugalware-release |cut -d ' ' -f 2`
. setup.en
bindir=/mnt/source/frugalware
exbindir=/mnt/source/extra/frugalware
target=/mnt/target
core="bash coreutils chkconfig frugalware grep sed"
extrapkgs="k3b-i18n"
logdev=/dev/tty4

### before strings
ask_lang()
{
	langbacktitle="$sellang - Frugalware $osver $setup"
	langf=`mktemp /tmp/tmp.XXXXXX`
	dialog --backtitle "$langbacktitle" --title "$sellangt" \
		--aspect 20 --menu "$sellangd" 0 0 0 \
		"en" "$end" "de" "$ded" "it" "$itd" "hu" "$hud" \
		2>$langf || exit 1
	language=`cat $langf`
	rm $langf
}				

ask_lang
. $language.conf
[ -e /bin/setup.$language ] && . setup.$language
setfont $font

### strings
# greeing section
welcomebacktitle="$welcome Frugalware $osver $setup"

# keyboard section
kbdbacktitle="$kbdconf - Frugalware $osver $setup"

# selecting media section
mediabacktitle="$searchmedia - Frugalware $osver $setup"

# partitioning section
partitioningbacktitle="$partitioning - Frugalware $osver $setup"

# swap section
swapparts=
setswapbacktitle="$setswap - Frugalware $osver $setup"

# rootdev section
prefstab=
rootdevbacktitle="$rootdevstring - Frugalware $osver $setup"

# linux partitions section
towhere=
miscdevbacktitle="$miscdevstring - Frugalware $osver $setup"

# packages section
selcat=
selpkg=
instlog=
yesdeps=
selectcategoriesbacktitle="$categorystring - Frugalware $osver $setup"
selectpkgsbacktitle="$pkgstring - Frugalware $osver $setup"
categorysearchbacktitle=$selectcategoriesbacktitle
pkgsearchbacktitle=$selectpkgsbacktitle
installpkgsbacktitle="$instpkgstring - Frugalware $osver $setup"

# configure section
confbacktitle="$confstring - Frugalware $osver $setup"

### functions
# greeting section
dolangsh()
{
	cat << EOF > /tmp/lang.sh
#!/bin/sh

# /etc/profile.d/lang.sh

# Set the system locale
# For a list of locales which are supported by this machine, type: locale -a

export LANG=$LANG
export LC_ALL=\$LANG
export CHARSET=$CHARSET
EOF
}

greet()
{
	dialog --backtitle "$welcomebacktitle" \
		--title "$welcome" --aspect 20 \
		--msgbox "$greetstring" 0 0
}

# keyboard section
ask_map()
{
	selmap=`mktemp /tmp/tmp.XXXXXX`
	selmapf=`mktemp /tmp/tmp.XXXXXX`
	chmod +x $selmap
	echo "dialog --aspect 20 --backtitle \"$kbdbacktitle\" --title \"$selmapt\" \\">$selmap
	echo "--default-item \"`find /usr/share/kbd/keymaps/i386/* -name *map.gz|grep -v include|sed 's|^/usr/share/kbd/keymaps/i386/||'|grep $language|sed -n '1 p'`\" \\">>$selmap
	echo "--menu \"$selmapd\" 0 0 0 \\">>$selmap
	for i in `find /usr/share/kbd/keymaps/i386/* -name *map.gz|grep -v include|sed 's|^/usr/share/kbd/keymaps/i386/||'`
	do
		echo "\"$i\" \"   \" \\">>$selmap
	done
	echo "2>$selmapf">>$selmap
	$selmap || return 1
	rm $selmap
	mapfile=/usr/share/kbd/keymaps/i386/`cat $selmapf`
	rm $selmapf
	map=`echo $mapfile|sed 's|^.*/\(.*\).map.gz$|\1|'`
}

set_keymap()
{
	if ! ask_map; then
		mapfile=/usr/share/kbd/keymaps/i386/qwerty/us.map.gz
		map=us
	fi
	loadkeys $mapfile >$logdev 2>&1
	cat << EOF > /tmp/keymap
# /etc/sysconfig/keymap

# sepecify the keyboard map, maps are in /usr/share/kbd/keymaps

keymap=$map
EOF
}

# selecting media section
search_source()
{
	sourcedir=`echo $bindir|sed 's|/frugalware||'`
	mount|grep $sourcedir && umount $sourcedir
	dialog --backtitle "$mediabacktitle" --title "$scanmediat" \
		--aspect 20 --infobox "$scanmediad" 0 0
	
	for i in `cat /proc/sys/dev/cdrom/info |grep name`
	do
		[ "$i" = "drive" -o "$i" = "name:" ] && continue
		mount -o ro -t iso9660 /dev/$i $sourcedir 1>$logdev 2>&1
		if [ "$?" = 0 ]; then
			dialog --aspect 20 --backtitle "$mediabacktitle" \
				--title "$mediafoundt" \
				--infobox "$mediafoundd $i." 0 0
			srcdev=$i
			break
		fi
	done
	sleep 1
}

# partitioning section
parthd()
{
	selppf=`mktemp /tmp/tmp.XXXXXX`
	dialog --clear --backtitle "$partitioningbacktitle" --title "$selppt" \
		--default-item cfdisk --menu "$selppd" 0 0 0 \
		"fdisk" "$fdiskd" \
		"cfdisk" "$cfdiskd" 2>$selppf || return 1
	selpp=`cat $selppf`
	rm $selppf
	$selpp $1
}

selhd()
{
	while /bin/true
	do
		selhdm=`mktemp /tmp/tmp.XXXXXX`
	        chmod +x $selhdm
	        selhddevf=`mktemp /tmp/tmp.XXXXXX`
		echo "dialog --clear --backtitle \"$partitioningbacktitle\" --title \"$selhdt\" \\" >$selhdm
		echo "--aspect 20 --ok-label \"$select\" --cancel-label \"$continue\" --menu \"$selhdd\" 0 0 0 \\">>$selhdm
		fdisk -l|grep ^Disk|sed 's/^Disk \(.*\): \([0-9].*\), [0-9].*$/"\1" "\2" \\/'>>$selhdm
		echo "2>$selhddevf">>$selhdm
		$selhdm || break; # aborted when choosing hds
		rm $selhdm
		selhddev=`cat $selhddevf`
		rm $selhddevf
		parthd $selhddev
	done
}

# swap section

selswappart()
{
	fdisk -l|grep -q 'Linux swap$'
	if [ "$?" != 0 ]; then
		dialog --backtitle "$setswapbacktitle" --title "$noswaptitle" \
			--yesno "$noswap" 0 0
		if [ "$?" != 0 ]; then
			swapparts=""
			return 1
		fi
	else
		swapqfile=`mktemp /tmp/tmp.XXXXXX`
		swapafile=`mktemp /tmp/tmp.XXXXXX`
		chmod +x $swapqfile
		echo -n "dialog --backtitle \"$setswapbacktitle\" --title \"$detectedswapt\" --checklist \"$detectedswapd\" 0 0 0 ">$swapqfile
		fdisk -l|grep 'Linux swap$'|tr -s ' '|sed 's/\(.*\) [0-9]* [0-9]* [0-9+]* [0-9]* \(.*\)/\1 "\2" On \\/'>>$swapqfile
		echo >>$swapqfile
		$swapqfile 2>$swapafile
		rm $swapqfile
		swapparts=`cat $swapafile|sed 's/"//g'`
		rm $swapafile
	fi
}

doswap ()
{
	[ -z "$prefstab" ] && prefstab=`mktemp /tmp/tmp.XXXXXX`
	printf "%-16s %-16s %-11s %-16s %-3s %s\n" "none" "/proc" "proc" "defaults" "0" "0" >>$prefstab
	printf "%-16s %-16s %-11s %-16s %-3s %s\n" "none" "/sys" "sysfs" "defaults" "0" "0" >>$prefstab
	printf "%-16s %-16s %-11s %-16s %-3s %s\n" "devpts" "/dev/pts" "devpts" "gid=5,mode=620" "0" "0" >>$prefstab
	for i in $*
	do
		dialog --backtitle "$setswapbacktitle" --title "$formatpartst" --infobox "$formatpartsd1 $i $formatpartsd2" 0 0
		mkswap -c $i >$logdev
		swapon $i >$logdev
		printf "%-16s %-16s %-11s %-16s %-3s %s\n" "$i" "swap" "swap" "defaults" "0" "0" >>$prefstab
	done
}

# rootdev dection

lstparts()
{
	for i in `fdisk -l|grep 'Linux$'|cut -d ' ' -f 1`
	do
		size=`fdisk -s $i`
		unset altname
		if grep -q $i $prefstab; then
			# added already
			on=`grep $i $prefstab |tr -s ' ' |cut -f 2 -d ' '`
			altname="$i $on Linux ${size}K"
		fi
		if [ -z "$altname" ]; then
			echo "\"$i\" \"Linux ${size}K\" \\" >>$1
		else
			echo "\"($inuse)\" \"$altname\" \\" >>$1
		fi
	done
}

selrootdev()
{
	[ -z "$prefstab" ] && prefstab=`mktemp /tmp/tmp.XXXXXX`
	selrootpart=`mktemp /tmp/tmp.XXXXXX`
	chmod +x $selrootpart
	rootpartf=`mktemp /tmp/tmp.XXXXXX`
	echo "dialog --backtitle \"$rootdevbacktitle\" --title \"$selrootdevt\" \\" >$selrootpart
	echo "--ok-label \"$select\" --menu \"$selrootdevd\" 0 0 0 \\">>$selrootpart
	lstparts $selrootpart
	echo "2>$rootpartf">>$selrootpart
	$selrootpart || leave "$rootdevbacktitle" # aborted when choosing root device
	rm $selrootpart
	rootdev=`cat $rootpartf`
	rm $rootpartf
}

mkfss() # $1 which device, $2 which fs, $3 how: $formatt or $checkt
{
	[ "$3" = "$checkt" ] && opts="-c"
	dialog --backtitle "$miscdevbacktitle" \
		--title "$duringformatt" \
		--infobox "$formatdevicestring $1 \n \
		$formatfsstring $2" 0 0
	mount|grep -q $1 && umount $1
	if [ "$2" = "ext2" ]; then
		mke2fs $opts $1 >$logdev 2>&1
	elif [ "$2" = "reiserfs" ]; then
		echo y | mkreiserfs $1 >$logdev 2>&1
	elif [ "$2" = "ext3" ]; then
		mke2fs -j $opts $1 >$logdev 2>&1
	elif [ "$2" = "jfs" ]; then
		mkfs.jfs -q $opts $1 >$logdev 2>&1
	elif [ "$2" = "xfs" ]; then
		mkfs.xfs -f $1 >$logdev 2>&1
	fi
}

formatdev() # $1: which device
{
	junk=`mktemp /tmp/tmp.XXXXXX`
	dialog --backtitle "$miscdevbacktitle" --title "$formatpart $1" \
	--menu "$wantformatq" 0 0 0 \
	"$formatt" "$fromatd" "$checkt" "$checkd" "$nofromatt" "$noformatd" 2>$junk || leave "$miscdevbacktitle" # aborted when choosing format mode
	howformat=`cat $junk`
	rm $junk
	if [ "$howformat" != "$nofromatt" ]; then
		unset ext2desc reiserdesc ex3desc jfsdesc xfsdesc
		grep ext2 -q /proc/filesystems && \
			ext2desc=$ext2predesc && default=ext2
		grep reiserfs -q /proc/filesystems && \
			reiserdesc=$reiserpredesc && default=reiserfs
		grep ext3 -q /proc/filesystems && \
			ext3desc=$ext3predesc && default=ext3
		grep jfs -q /proc/filesystems && \
			jfsdesc=$jfspredesc && default=jfs
		grep ' xfs' -q /proc/filesystems && \
			xfsdesc=$xfspredesc && default=xfs
		selfsf=`mktemp /tmp/tmp.XXXXXX`
		chmod +x $selfsf
		echo "dialog --backtitle \"$miscdevbacktitle\" \
		--title \"$selectfst $1\" --default-item \"$default\" \
		--menu \"$selectfsd \\">$selfsf
		echo "$ext2desc $reiserdesc $ext3desc $jfsdesc $xfsdesc\" \
			0 0 0 \\">>$selfsf
		[ -z "$ext2desc" ] || echo "\"ext2\" \
			\"$ext2shortdesc\" \\" >>$selfsf
		[ -z "$reiserdesc" ] || echo "\"reiserfs\" \
			\"$reisershortdesc\" \\" >>$selfsf
		[ -z "$ext3desc" ] || echo "\"ext3\" \
			\"$ext3shortdesc\" \\" >>$selfsf
		[ -z "$jfsdesc" ] || echo "\"jfs\" \
			\"$jfsshortdesc\" \\" >>$selfsf
		[ -z "$xfsdesc" ] || echo "\"xfs\" \
			\"$xfsshortdesc\" \\" >>$selfsf
		junk=`mktemp /tmp/tmp.XXXXXX`
		echo "2>$junk">>$selfsf
		$selfsf || leave "$miscdevbacktitle" # aborted when choosing fs
		rm $selfsf
		mkfss $1 `cat $junk` $howformat
		rm $junk
	fi
}

mountdev() # $1: which device $2: mount point
{
	[ -d $target/$2 ] || mkdir -p $target/$2
	mount $1 $target/$2 >$logdev 2>&1
	sleep 1
	type=`mount | grep ^$1 | cut -f 5 -d ' '`
	printf "%-16s %-16s %-11s %-16s %-3s %s\n" "$1" "$2" "$type" "defaults" "1" "1" >> $prefstab
}

# linux partitions section

askwhere() # $1: which device
{
	askwheref=`mktemp /tmp/tmp.XXXXXX`
	dialog --backtitle "$miscdevbacktitle" --title "$askwherelt $1" \
		--inputbox "$askwhereld" 0 0 2>$askwheref || return 1
	towhere=`cat $askwheref`
	rm $askwheref
	# cosmetics
	[ "$towhere" = "" ] && return 1
	[ "`echo "$towhere" | cut -b1`" = " " ] && return 1
	[ "`echo "$towhere" | cut -b1`" = "/" ] || towhere="/$towhere"
}

setup_linux() {
	[ "`fdisk -l|grep Linux$|wc -l|tr -s ' '|sed 's/ //'`" != 1 ] || return 1
	while /bin/true
	do
		sellinuxparts=`mktemp /tmp/tmp.XXXXXX`
		chmod +x $sellinuxparts
		linuxpartsf=`mktemp /tmp/tmp.XXXXXX`
		echo "dialog --backtitle \"$miscdevbacktitle\" --title \"$sellinuxpartst\" \\" >$sellinuxparts
		echo "--ok-label \"$select\" --cancel-label \"$continue\" --menu \"$sellinuxpartsd\" 0 0 0 \\">>$sellinuxparts
		lstparts $sellinuxparts
		echo "2>$linuxpartsf">>$sellinuxparts
		$sellinuxparts || break; # aborted when choosing linux parts
		rm $sellinuxparts
		linuxpart=`cat $linuxpartsf`
		rm $linuxpartsf
		if [ "$linuxpart" != "($inuse)" ]; then
			formatdev $linuxpart
			askwhere $linuxpart || continue
			mountdev $linuxpart $towhere
		fi
	done
	rm $sellinuxparts
	rm $linuxpartsf
}

# dos partitions section

lstdosparts()
{
	for i in `fdisk -l|egrep 'Win95 F|Win98 F|HPFS|W95 F|FAT12|FAT16'|cut -d ' ' -f 1`
	do
		size=`fdisk -s $i`
		unset altname
		if grep -q $i $prefstab; then
			# added already
			on=`grep $i $prefstab |tr -s ' ' |cut -f 2 -d ' '`
			altname="$i $on Linux ${size}K"
		fi
		if [ -z "$altname" ]; then
			echo "\"$i\" \"Linux ${size}K\" \\" >>$1
		else
			echo "\"($inuse)\" \"$altname\" \\" >>$1
		fi
	done
}

setup_dos() {
	[ "`fdisk -l|egrep 'Win95 F|Win98 F|HPFS|W95 F|FAT12|FAT16'|wc -l|tr -s ' '|sed 's/ //'`" != 0 ] || return 1
	while /bin/true
	do
		seldosparts=`mktemp /tmp/tmp.XXXXXX`
		chmod +x $seldosparts
		dospartsf=`mktemp /tmp/tmp.XXXXXX`
		echo "dialog --backtitle \"$miscdevbacktitle\" --title \"$seldospartst\" \\" >$seldosparts
		echo "--ok-label \"$select\" --cancel-label "$continue" --menu \"$seldospartsd\" 0 0 0 \\">>$seldosparts
		lstdosparts $seldosparts
		echo "2>$dospartsf">>$seldosparts
		$seldosparts || break; # aborted when choosing dos parts
		rm $seldosparts
		dospart=`cat $dospartsf`
		rm $dospartsf
		if [ "$dospart" != "($inuse)" ]; then
			askwhere $dospart || continue
			mountdev $dospart $towhere
		fi
	done
	rm $seldosparts
	rm $dospartsf
}

# packages section

info()
{
	echo
	# old color version, used against bash
	# echo -e "\033[1;32m==>\033[1;0m \033[1;1m$1\033[1;0m" >&2
	echo "*** $1 ***"
	echo
}

categorysize ()
{
	repro=$1
	shift
	if [ "$repro" = "frugalware" ]; then
		pkglstf="$bindir/../Packages.lst"
		pacbindir=$bindir
	elif [ "$repro" = "extra" ]; then
		pkglstf="$exbindir/../Packages.lst"
		pacbindir=$exbindir
	fi
	categorytempfile=`mktemp /tmp/tmp.XXXXXX`
	chmod +x $categorytempfile
	echo -n "( du -ch ">$categorytempfile
	for i in `cat $pkglstf |grep ^$1|sed 's|.*/\(.*\)|\1|'`
	do
		echo -n "$pacbindir/$i ">>$categorytempfile
	done
	echo ") |tail -n 1 |sed 's/\([0-9\.]*[A-Za-z]\).*/\1/'" >>$categorytempfile
	echo `$categorytempfile`
	rm $categorytempfile
}

pkgsize()
{
	du -h $1 |sed 's/\([0-9\.]*[A-Za-z]\).*/\1/'
}

category_search()
{
	dialog --backtitle "$categorysearchbacktitle" --infobox "$categorychk" 0 0
}
pkg_search()
{
	dialog --backtitle "$pkgsearchbacktitle" --infobox "$pkgchk" 0 0
}

category_select ()
{
	category_search
	repro=$1
	if [ "$repro" = "frugalware" ]; then
		pkglstf="$bindir/../Packages.lst"
		pacbindir=$bindir
	elif [ "$repro" = "extra" ]; then
		pkglstf="$exbindir/../Packages.lst"
		pacbindir=$exbindir
	fi
	selecttempfile=`mktemp /tmp/tmp.XXXXXX`
	whichselectedtempfile=`mktemp /tmp/tmp.XXXXXX`
	whichselectedtempfile2=`mktemp /tmp/tmp.XXXXXX`
	chmod +x $selecttempfile
	echo -n "dialog --backtitle \"$selectcategoriesbacktitle\" --title \"$categorystring\" --checklist \"$pleaseselectcategories\" 0 0 0 " >$selecttempfile
	categories=`cat $pkglstf|sed 's|\(.*\)/.*|\1|'|sort|uniq`
	for i in $categories
	do
		state=on
		if [ "$repro" = "extra" ]; then
			if [ "$i" != "locale" ]; then
				state=off
			fi
		fi
		echo -n "$i \"(`categorysize $repro $i`)\" $state ">>$selecttempfile
	done
	$selecttempfile 2>$whichselectedtempfile || leave "$selectcategoriesbacktitle"
	rm $selecttempfile
	for i in `cat $whichselectedtempfile`
	do
		echo -n "$i "|sed 's/"//g' >>$whichselectedtempfile2
	done
	rm $whichselectedtempfile
	selcat=`cat $whichselectedtempfile2`
	rm $whichselectedtempfile2
	if [ -z "$selcat" ]; then
		return 1
	fi
}

gen_locpkgs()
{
	for i in `ls $exbindir|grep "\-$language"|sed 's/\(.*\)-[0-9].*-[0-9].*fpm/\1/'`
	do
		echo -n "|$i"
	done
}

package_select_install()
{
	repro=$1
	shift
	if [ "$repro" = "frugalware" ]; then
		pkglstf="$bindir/../Packages.lst"
		pacbindir=$bindir
	elif [ "$repro" = "extra" ]; then
		pkglstf="$exbindir/../Packages.lst"
		pacbindir=$exbindir
	fi
	pkg_search
	printpkgtemp=`mktemp /tmp/tmp.XXXXXX`
	chmod +x $printpkgtemp
	prepkglst=`mktemp /tmp/tmp.XXXXXX`
	echo -n "cat $pkglstf |egrep ' " >$printpkgtemp
	for i in $*
	do
		echo -n "|^$i" >>$printpkgtemp
	done
	echo "| '|sed 's|.*/\(.*\)|\1|'">>$printpkgtemp
	$printpkgtemp >$prepkglst
	rm $printpkgtemp
	pkglstselect=`mktemp /tmp/tmp.XXXXXX`
	whichselected=`mktemp /tmp/tmp.XXXXXX`
	whichselected2=`mktemp /tmp/tmp.XXXXXX`
	whichselected3=`mktemp /tmp/tmp.XXXXXX`
	chmod +x $pkglstselect
	echo -n "dialog --backtitle \"$selectpkgsbacktitle\" --title \"$pkgstring\" --checklist \"$pleaseselectpkgs\" 0 0 0 " >$pkglstselect
	if [ "$repro" = "extra" ]; then
		locpkgs=`gen_locpkgs`
	fi
	for i in `cat $prepkglst`
	do
		state=on
		if [ "$repro" = "extra" ]; then
			echo $i|egrep -q "$extrapkgs$locpkgs" || state=off
		fi
		echo -n "$i \"(`pkgsize $pacbindir/$i`)\" $state ">>$pkglstselect
	done
	rm $prepkglst
	$pkglstselect 2>$whichselected || leave "$selectpkgsbacktitle"
	rm $pkglstselect
	for i in `cat $whichselected`
	do
		echo -n "$i "|sed 's/"//g' >>$whichselected2
	done
	rm $whichselected
	for i in `cat $whichselected2`
	do
		echo $i|sed 's/\(.*\)-[0-9].*-[0-9].*fpm/\1/' \
			>>$whichselected3
	done
	rm $whichselected2
	allselpkg=`cat $whichselected3`
	rm $whichselected3
	
	rm -rf /tmp/pkgcat
	mkdir -p /tmp/pkgcat
	for i in $allselpkg
	do
		icategory=`grep "/$i-[0-9]" $pkglstf |sed 's|^\(.*\)/.*$|\1|'`
		echo -n "$i ">>/tmp/pkgcat/$icategory
		
	done
	clear
	if [ "$repro" = "frugalware" ]; then
		for i in base apps lib multimedia network
		do
			if [ -e /tmp/pkgcat/$i ]; then
				selpkg=`cat /tmp/pkgcat/$i`
				install_packages $repro `echo $i|sed 's|.*/\(.*\)$|\1|'` $selpkg
			fi
		done
		#TODO: eject cd, etc
		clear
		for i in x11 xlib xapps gnome kde devel
		do
			if [ -e /tmp/pkgcat/$i ]; then
				selpkg=`cat /tmp/pkgcat/$i`
				install_packages $repro `echo $i|sed 's|.*/\(.*\)$|\1|'` $selpkg
			fi
		done
	elif [ "$repro" = "extra" ]; then
		if ! [ -z $* ]; then
			for i in $*
			do
				if [ -e /tmp/pkgcat/$i ]; then
						selpkg=`cat /tmp/pkgcat/$i`
					install_packages $repro `echo $i|sed 's|.*/\(.*\)$|\1|'` $selpkg
				fi
			done
		fi
		[ -h var/cache/pacman/pkg ] && rm var/cache/pacman/pkg
	fi
	rm -rf /tmp/pkgcat
}

install_packages()
{
	repro=$1
	if [ "$repro" = "frugalware" ]; then
		reproname="current"
		pkglstf="$bindir/../Packages.lst"
		pacbindir=$bindir
	elif [ "$repro" = "extra" ]; then
		reproname="extra"
		pkglstf="$exbindir/../Packages.lst"
		pacbindir=$exbindir
	fi
	shift
	name=$1
	[ "$name" = "base" ] && extrapkg="$core" || extrapkg=""
	shift
	# preparing pkgdb
	info "$instpkg ($name $sect)"
	if ! [ -d var/lib/pacman/$reproname ]; then
		[ -d tmp ] || mkdir tmp
		( mkdir -p var/lib/pacman/$reproname
		  cd var/lib/pacman/$reproname
		  tar xzf $pacbindir/$reproname.fdb )
		echo "[$reproname]" >>/etc/pacman.conf
		echo "Server = file://$pacbindir" >>/etc/pacman.conf
		( mkdir -p var/cache/pacman
		  cd var/cache/pacman 
		  [ -e pkg ] && rm pkg
		  ln -sf $pacbindir pkg )
	fi
	pkginstall=`mktemp /tmp/tmp.XXXXXX`
	chmod +x $pkginstall
	echo -n "pacman -S -r ./ --noconfirm $extrapkg ">$pkginstall
	for i in $*
	do
		echo -n "$i ">>$pkginstall
	done
	# we will leave setup if errors occured: no way to configure a
	# not-installed system ;-)
	$pkginstall
	if [ "$?" = 0 ]; then
		info "$doneinstpkg ($name $sect)"
	else
		info "$errinstpkg"
		sleep 5
		leave "$errinstpkg"
	fi
	rm $pkginstall
}

cd_change()
{
	# we eject only if there is no extra repo on the disc (not dvd)
	if ! [ -d /mnt/source/extra/frugalware/ ]; then
		umount /mnt/source
		$target/usr/bin/eject $srcdev
		nextf=`mktemp /tmp/tmp.XXXXXX`
		dialog --backtitle "$installpkgsbacktitle" --title "$neednextt" \
			--aspect 20 --menu "$neednextd" 0 0 0 \
			"$continue" "$continued" "$quit" "$quitd" 2>$nextf \
			|| echo "$quit" >$nextf
		next=`cat $nextf`
		rm $nextf
		if [ "$next" = "$quit" ]; then
			return 1
		else
			search_source
		fi
	fi
}

# configure section

conf_kernel_modules()
{
	dialog --backtitle "$confbacktitle" --title "$confkmodt" \
		--aspect 20 --infobox "$confkmodd" 0 0
	chroot ./ /sbin/depmod -a
	sleep 1
}

conf_passwd()
{
	# root
	while [ -z "`cat etc/shadow |grep ^root |cut -d : -f 2`" ]; do
		dialog --backtitle "$confbacktitle" --title "$nopasswdt" \
			--aspect 20 --yesno "$nopasswdd" 0 0
		if [ $? = 0 ]; then
			clear
			chroot ./ /usr/bin/passwd root
		else
			break;
		fi
	done
	
	# create a normal user
	while ! grep -q :100: etc/passwd; do
		dialog --backtitle "$confbacktitle" --title "$nonormalusert" \
			--aspect 20 --yesno "$nonormaluserd" 0 0
		if [ $? = 0 ]; then
			clear
			chroot ./ /usr/sbin/adduser
		else
			break;
		fi
	done
}

leave() # $1: backtitle, $2: title, $3: text
{
	[ -z "$1" ] && return 1
	[ -z "$2" ] && reboottitle="$ferrort" || reboottitle="$2"
	[ -z "$3" ] && reboottext="$ferrord" || reboottext="$3"
	dialog --aspect 20 --backtitle "$1" --title "$reboottitle" \
	--yesno "$reboottext" 0 0
	if [ "$?" = 0 ]; then
		clear
		/sbin/reboot
		exit 0
	else
		clear
		/bin/sh
		/sbin/reboot
		exit 0
	fi
}

### main
# greeting section
dolangsh # creates /tmp/lang.sh
greet

# keyboard section
set_keymap # set keyboard map && creates /tmp/keymap

# selecting media section
search_source # now the cd/dvd is mounted on /mnt/source

# partitioning section
selhd # this will select hard disks, and then call fdisk/cfdisk/etc

# swap section
selswappart # selected swap partitions now in $swapparts
doswap $swapparts # format selected partitions

# rootdev section
selrootdev #root device now in $rootdev
formatdev $rootdev
mountdev $rootdev /
[ -d $target/etc/profile.d ] || mkdir -p $target/etc/profile.d $target/etc/sysconfig
mv -f $prefstab $target/etc/fstab
mv -f /tmp/lang.sh $target/etc/profile.d/lang.sh
mv -f /tmp/keymap $target/etc/sysconfig/keymap
chmod 755 $target/etc/profile.d/lang.sh
prefstab=$target/etc/fstab

# linux partitions section
setup_linux

# dos partitions section
setup_dos

# packages section, installation
cd $target
category_select frugalware # selected categories now in $selcat
package_select_install frugalware $selcat # select and install base packages
cd_change && category_select extra && package_select_install extra $selcat

# configure section

# run depmod, so that no problem with subfs
conf_kernel_modules || leave "$confbacktitle"
conf_passwd || leave "$confbacktitle"
echo "font=$font" >>$target/etc/sysconfig/font # save the console font
chroot ./ /sbin/netconfig || leave "$confbacktitle" # configure network
chroot ./ /sbin/grubconfig || leave "$confbacktitle" # configure grub
chroot ./ /sbin/timeconfig || leave "$confbacktitle" # configure timezones
chroot ./ /sbin/mouseconfig || leave "$confbacktitle" # configure gpm
pacman -r /mnt/target -Q xorg >$logdev 2>&1 && chroot ./ /sbin/xconfig # conf x

# end
leave "$confbacktitle" "$endsetupt" "$endsetupd"
